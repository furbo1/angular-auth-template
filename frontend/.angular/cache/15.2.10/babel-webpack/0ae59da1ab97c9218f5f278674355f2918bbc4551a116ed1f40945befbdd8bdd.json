{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthService {\n  constructor(router) {\n    this.router = router;\n  }\n  login() {\n    // Set isAuthenticated in localStorage or handle login logic\n    localStorage.setItem('isAuthenticated', 'true');\n    this.router.navigate(['/']);\n  }\n  logout() {\n    localStorage.removeItem('isAuthenticated');\n    this.router.navigate(['/login']);\n  }\n  isAuthenticated() {\n    return !!localStorage.getItem('isAuthenticated');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAW;EAErCC,KAAK;IACH;IACAC,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC;IAC/C,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;EAEAC,MAAM;IACJH,YAAY,CAACI,UAAU,CAAC,iBAAiB,CAAC;IAC1C,IAAI,CAACN,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAG,eAAe;IACb,OAAO,CAAC,CAACL,YAAY,CAACM,OAAO,CAAC,iBAAiB,CAAC;EAClD;EAAC;qBAhBUV,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAW,SAAXX,WAAW;IAAAY,YAFV;EAAM","names":["AuthService","constructor","router","login","localStorage","setItem","navigate","logout","removeItem","isAuthenticated","getItem","factory","providedIn"],"sourceRoot":"","sources":["/Users/alex/Documents/Code/create-angular-auth/frontend/src/app/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private router: Router) {}\n\n  login(): void {\n    // Set isAuthenticated in localStorage or handle login logic\n    localStorage.setItem('isAuthenticated', 'true');\n    this.router.navigate(['/']);\n  }\n\n  logout(): void {\n    localStorage.removeItem('isAuthenticated');\n    this.router.navigate(['/login']);\n  }\n\n  isAuthenticated(): boolean {\n    return !!localStorage.getItem('isAuthenticated');\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}